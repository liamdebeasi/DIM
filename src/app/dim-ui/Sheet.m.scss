@use '../variables' as *;

// These styles need to be early in the stylesheet so that they can be easily
// overridden by components.
// TODO: When we stop supporting Chrome <99 and Safari <15.4, we can use @layer
// here to fix these cascade issues once and for all.

$control-color: rgba(255, 255, 255, 0.5);

.sheet {
  max-height: calc(var(--viewport-height) - var(--header-height) - 8px);
  height: 100%;
  left: 0;
  right: 0;
  position: fixed;
  backface-visibility: hidden;
  bottom: 0;
  // Pin the sheet to just over the keyboard
  bottom: var(--viewport-bottom-offset);
  background-color: var(--theme-item-sheet-bg);
  color: #e0e0e0;
  box-shadow: 0 -1px 24px 0 #222;
  user-select: none;
}

.header {
  box-sizing: border-box;
  padding: 11px 48px 10px 10px;
  border-bottom: 1px solid #333;
  border-top: 5px solid $control-color;
  cursor: grab;
  // without a min-height, the border-bottom sticks through the close sheet button
  min-height: 56px;
  flex-shrink: 0;
  display: flex;
  flex-direction: row;
  align-items: center;

  > *:first-child {
    flex: 1;
  }

  :where(h1) {
    @include destiny-header;
    font-size: 16px;
    margin: 0 0 8px 0;
    display: block;
  }
}

.footer {
  border-top: 1px solid #333;
  padding: 8px 10px;
  padding-bottom: Max(8px, env(safe-area-inset-bottom));
  flex-shrink: 0;
}

.container {
  position: relative;
  max-height: calc(var(--viewport-height) - var(--header-height) - 8px);
  height: 100%;
  touch-action: none;

  display: flex;
  flex-direction: column;
}

.scroll-wrapper {
  height: 100%;

  flex: 1;

  position: relative;
}

.contents {
  touch-events: none;

  position: absolute;

  height: 100%;

  box-sizing: border-box;

  overflow-y: auto;
  overscroll-behavior: contain;

  &:last-child {
    padding-bottom: env(safe-area-inset-bottom);
  }
}

/**
 * This forces the rubber band effect on iOS on the scrollable area even if scroll
 * is not necessary. This is done to make the sheet feel more native. It is also
 * done to work around a WebKit issue where scrolling will incorrectly latch on
 * to the body when the sheet cannot be scrolled.
 */
.contents::before,
.contents::after {
  position: absolute;

  width: 1px;
  height: 1px;

  content: '';
}

.contents::before {
  bottom: -1px;
}

.contents::after {
  top: -1px;
}

.close {
  all: initial;
  z-index: 1;
  position: absolute;
  right: 0;
  top: 0;
  padding: 18px 12px 12px 12px;
  color: $control-color;
  cursor: pointer;
  > :global(.app-icon) {
    height: 24px;
    width: 24px;
    font-size: 24px;
  }
  &:active,
  &:hover,
  &:focus-visible {
    color: var(--theme-accent-primary);
  }
}

.sheetDisabled {
  transform-origin: center bottom;
  // TODO: would be better to do with Framer Motion, once we switch over to it
  transform: scale(0.98) !important;
  transition: transform 300ms linear;
}

.disabledScreen {
  background-color: black;
  position: absolute;
  inset: 0;
  display: none;
  transition: opacity 300ms linear;
  z-index: 1;
  .sheetDisabled & {
    display: block;
    opacity: 0.6;
  }
}

.noHeader {
  right: 16px !important;
}
